The storage of the machine is to use database.

For this implementation, we use mongo db (relational db) as the database.

Store the objects, attributes, and states.

Objects table, attribute table, and states table.

The table is easy for generating the state machine, and it is also easy for usage of data mining techniques.

One object is mapped to a table. different rows are different attributes.
One attribute is mapped to a table. Different rows are different values for the attributess.
Context attribute state is the stable meaningful value.

One attributeStates is mapped to a table. 

During the exploration of building context state machines (CSMs), we conclude 10 aspects
that are important for building permanent context state machines. We also discuss 
the building of temporal CSMs, which is implemented in our 
preliminary implementation of CSMs. 

1: how to learn a new state?
The new state will be learned by concluding similar information, either temporal
, spatial or meanings, and the new state will be assigned with a big number. And
the big number can be assigned with a meaningful word or a description later.

2: how to determine the big number?
One domain will hold a period of number such as from
1,000,000 to 1,999,999 or from 2,000,000 to 2,999,999.

3: By using the numbers, the distance between states can be calculated and we can
also calculate the similarity of two different state machines.

4: the background idea of using numbers to represent the states is that we believe 
all states of all entities of the world have a limit numbers.

E.g. If we save all numbers within 1,000,000-1,000,999 are places of UA, and if given a 
new number, we can easily conclude that the number can represent UA campus area.
that 

5: we plan to give every object in the whole world a unique ID. such as in IPV4 or
IPV6 format:
xxxxx-xxxxx-xxxxx-xxxxx-xxxxx-xxxxx
The first  number will represent spatial factor;
The second number will represent temporal factor;
The third number will represent other factors;

This kind of information are for public things which have no privacy concerns and 
they are used for public benefits and can be accessed by any people.

For privacy objects, the format can still be like:
xxxxx-xxxxx-xxxxx-xxxxx-xxxxx-xxxxx
And each of the number will represent factors which are not spatial. They can be 
temporal.

So for different objects, they can choose different factors depends on the privacy 
level or requirement.

6: The reason to build this, is that as expected in the future, the computing 
capability will not be a limit, and the storage is also not a limitï¼Œ depending on
Moore's law in computer area. 

7: So one state can by composed by a number of numbers. This state can use the 
meaning of the highest identical number to represent. e.g.:
xxxxx-xxxxx-12345-xxxxx
xxxxx-xxxxx-12345-xxxxx

If 12345 mean UA area, the two numbers can be concluded as within one state, which
is UA Area state.

8: To facilitate the usage of this mechanism, there can be a middle ware, which is
specially used for ID generation or registering.

Just as network, there can be domain object-IP address or public object-IP address,
and correspondingly, they are temporal and permanent.

9: a new state can be generate if the threshold of number of numbers is reached.
All objects and concepts within all objects in the whole world are limited.

10: By using this modeling approach, the machine learning technique such as
SVM can be applied.

Usage:
As one potential usage of the above approach, it can help on auto-translation, or 
multi-language programming, by computing the distance of different states and find
the best match. In programming and programming language area, the states can be 
steady and modeled. This can be a complex example. We will use a simple example to
demonstrate the usage of this approach.

The above 10 aspects describe a whole picture of context state generation, however,
our current work is to generate states for limited information and is a preliminary
 version. This version can be used to generate domain area context state machines
and temporal context state machines.

Since we are exploring the temporal context state machines, we will only use:
EntityId(such as a person) StateId (such as a location), EntityName, StateName.
The attribute of entity name and state name can be null if there is no meaningful
name has been identified.

This is an example of high level context information, which is generated by other
context generation middle-ware.

SUBJECT:
	PERSON: Mike
	
PREDICATE:
	ACTION: Driving

OBJECT:
	LOCATION: FROM: Home
	LOCATION: To: Office

SUBJECT:
	PERSON: Mike
	
PREDICATE:
	ACTION: Walking

OBJECT:
	LOCATION: FROM: Office
	LOCATION: To: Dining Hall
	
Context State Machine Tables:

Original table from raw data:
entity entityType  attribute  state
Mike     person     action     Driving
Mike     person     action     Walking

Entity Table:
entityName entityType entityId
Mike        person    1

Attribute Table:
entityId attributeId attributeName
1          1          action
1          2          location

State Table:
entityId attributeId  stateId  stateName
1          1           1        Driving 
1          1           2        Walking
1          2           1        Home
1          2           2        Office
1          2           3        Dining Hall

State Transition Table:
entityIdAttributeId transitionId FromState(attribute's stateId) ToState  Time  OtherImportantFactors..
 1-1                    1           1                           2
 1-2                    2           1                           2
 1-2                    3           2                           3